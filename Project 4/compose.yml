services:
  db:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    networks:
      - yelplike-network

  db-init:
    build: .
    environment:
      MONGO_HOST: db
      MONGO_USER: ${MONGO_ROOT_USER}
      MONGO_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_AUTH_DB_NAME: admin
      MONGO_CREATE_USER: ${MONGO_USER}
      MONGO_CREATE_PASSWORD: ${MONGO_PASSWORD}
    depends_on:
      - db
    restart: on-failure
    command: npm run initdb
    networks:
      - yelplike-network

  rabbit:
    image: rabbitmq:3-management
    container_name: ${RABBITMQ_HOST}
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - yelplike-network

  api:
    build: .
    ports:
      - 8000:8000
    environment:
      MONGO_HOST: db
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
    depends_on:
      - db
      - db-init
    networks:
      - yelplike-network
    restart: on-failure

  consumer:
    build: .
    environment: 
      MONGO_HOST: db
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
    depends_on:
      - db
      - db-init
      - rabbit
    command: npm run consumer
    networks:
      - yelplike-network
    # restart: on-failure  

networks:
  yelplike-network:
    driver: bridge
